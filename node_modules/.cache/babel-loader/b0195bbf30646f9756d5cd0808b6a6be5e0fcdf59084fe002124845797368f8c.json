{"ast":null,"code":"var _jsxFileName = \"/Users/victor/Documents/GitHub/Crypto-APP/src/components/GlobalChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Treemap, Tooltip } from \"recharts\";\nimport colors from \"../styles/_settings.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalChart = ({\n  coinsData\n}) => {\n  _s();\n  const [dataArray, setDataArray] = useState([]);\n  const colorPicker = number => {\n    if (number >= 20) {\n      return colors.color1;\n    } else if (number >= 5) {\n      return colors.green2;\n    } else if (number >= 0) {\n      return colors.green1;\n    } else if (number >= -5) {\n      return colors.red1;\n    } else if (number >= -20) {\n      return colors.red2;\n    } else {\n      return colors.black2;\n    }\n  };\n  const excludeCoin = coin => {\n    if (coin === \"usdt\" || coin === \"usdc\" || coin === \"busd\" || coin === \"dai\" || coin === \"ust\" || coin === \"mim\") {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  useEffect(() => {\n    let chartData = [];\n    if (coinsData.length > 0) {\n      for (let i = 0; i < 45; i++) {\n        if (excludeCoin(coinsData[i].symbol)) {\n          chartData.push({\n            name: coinsData[i].symbol.toUpperCase() + \" \" + coinsData[i].market_cap_change_percentage_24h.toFixed(1) + \"%\",\n            size: coinsData[i].market_cap,\n            fill: colorPicker(coinsData[i].price_change_percentage_24h)\n          });\n        }\n      }\n    }\n    setDataArray(chartData);\n  }, [coinsData]);\n  const TreemapTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-tooltip\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"label\",\n          children: payload[0].payload.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-chart\",\n    children: /*#__PURE__*/_jsxDEV(Treemap, {\n      width: 730,\n      height: 181,\n      data: dataArray,\n      dataKey: \"size\",\n      stroke: \"rgb(51, 51, 51)\",\n      fill: \"black\",\n      aspectRatio: \"1\",\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        content: /*#__PURE__*/_jsxDEV(TreemapTooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalChart, \"qXJfxCrIqd9KMzDGDz7oIam+9Ac=\");\n_c = GlobalChart;\nexport default GlobalChart;\nvar _c;\n$RefreshReg$(_c, \"GlobalChart\");","map":{"version":3,"names":["React","useEffect","useState","Treemap","Tooltip","colors","jsxDEV","_jsxDEV","GlobalChart","coinsData","_s","dataArray","setDataArray","colorPicker","number","color1","green2","green1","red1","red2","black2","excludeCoin","coin","chartData","length","i","symbol","push","name","toUpperCase","market_cap_change_percentage_24h","toFixed","size","market_cap","fill","price_change_percentage_24h","TreemapTooltip","active","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","dataKey","stroke","aspectRatio","content","_c","$RefreshReg$"],"sources":["/Users/victor/Documents/GitHub/Crypto-APP/src/components/GlobalChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Treemap, Tooltip } from \"recharts\";\nimport colors from \"../styles/_settings.scss\";\n\nconst GlobalChart = ({ coinsData }) => {\n  const [dataArray, setDataArray] = useState([]);\n\n  const colorPicker = (number) => {\n    if (number >= 20) {\n      return colors.color1;\n    } else if (number >= 5) {\n      return colors.green2;\n    } else if (number >= 0) {\n      return colors.green1;\n    } else if (number >= -5) {\n      return colors.red1;\n    } else if (number >= -20) {\n      return colors.red2;\n    } else {\n      return colors.black2;\n    }\n  };\n\n  const excludeCoin = (coin) => {\n    if (\n      coin === \"usdt\" ||\n      coin === \"usdc\" ||\n      coin === \"busd\" ||\n      coin === \"dai\" ||\n      coin === \"ust\" ||\n      coin === \"mim\"\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  useEffect(() => {\n    let chartData = [];\n\n    if (coinsData.length > 0) {\n      for (let i = 0; i < 45; i++) {\n        if (excludeCoin(coinsData[i].symbol)) {\n          chartData.push({\n            name:\n              coinsData[i].symbol.toUpperCase() +\n              \" \" +\n              coinsData[i].market_cap_change_percentage_24h.toFixed(1) +\n              \"%\",\n            size: coinsData[i].market_cap,\n            fill: colorPicker(coinsData[i].price_change_percentage_24h),\n          });\n        }\n      }\n    }\n    setDataArray(chartData);\n  }, [coinsData]);\n\n  const TreemapTooltip = ({ active, payload }) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"custom-tooltip\">\n          <p className=\"label\">{payload[0].payload.name}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"global-chart\">\n      <Treemap\n        width={730}\n        height={181}\n        data={dataArray}\n        dataKey=\"size\"\n        stroke=\"rgb(51, 51, 51)\"\n        fill=\"black\"\n        aspectRatio=\"1\"\n      >\n        <Tooltip content={<TreemapTooltip />} />\n      </Treemap>\n    </div>\n  );\n};\n\nexport default GlobalChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}